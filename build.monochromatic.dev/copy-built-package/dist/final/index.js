import fs2 from"fs";import path2 from"path";import path from"path";import fs from"fs";var closestPath=(currentPath=path.resolve(),selectors="package.json",layers=1)=>{if(fs.existsSync(path.join(currentPath,selectors))){if(layers===1){return currentPath}return closestPath(path.join(currentPath,".."),selectors,layers-1)}return closestPath(path.join(currentPath,".."),selectors,layers)};var src_default=closestPath;var copyBuiltPackage=()=>{const WORKSPACE_DIR=src_default(path2.resolve(),"pnpm-workspace.yaml");const{name}=JSON.parse(fs2.readFileSync(path2.join(path2.resolve(),"package.json"),{encoding:"utf8"}));if(WORKSPACE_DIR&&path2.join(WORKSPACE_DIR,"helpers",name)===path2.resolve()){const buildMonochromaticDevDir=path2.join(WORKSPACE_DIR,"build.monochromatic.dev");const src=path2.join(path2.resolve(),"dist","final");const desPackage=path2.join(buildMonochromaticDevDir,`${name}-built`);if(fs2.existsSync(desPackage)){const des=path2.join(desPackage,"dist","final");if(!fs2.existsSync(des))fs2.mkdirSync(des,{recursive:true});fs2.readdirSync(src).forEach((file=>{fs2.copyFileSync(path2.join(src,file),path2.join(des,file))}))}}};var src_default2=copyBuiltPackage;export{src_default2 as default};
//# sourceMappingURL=index.js.map